Parameters:
  LatestAmiId:
    Description: (DO NOT CHANGE)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BucketName: 
    Type: String
    Default: 'My-Unique-Bucket-Name'

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsHostnames: true
      EnableDnsSupport: true
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: My-VPC

  MyPrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: My-Private-RT

  MyPrivateSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: My-Private-SN

  MyPrivateSNRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPrivateRT
      SubnetId: !Ref MyPrivateSN

  SSMSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSM Security Group
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: SSM-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !GetAtt MyVPC.CidrBlock

  MySSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcId: !Ref MyVPC
      SubnetIds: 
        - !Ref MyPrivateSN
      SecurityGroupIds:
        - !Ref SSMSG

  MySSMMSGEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcId: !Ref MyVPC
      SubnetIds: 
        - !Ref MyPrivateSN
      SecurityGroupIds:
        - !Ref SSMSG

  MyEC2MSGEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcId: !Ref MyVPC
      SubnetIds: 
        - !Ref MyPrivateSN
      SecurityGroupIds:
        - !Ref SSMSG

  MySSMRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ec2.amazonaws.com ]
            Action: 
              - sts:AssumeRole
      Path: /
  
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [ !Ref MySSMRole ]

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !Ref MyInstanceProfile
      Tags:
        - Key: Name
          Value: My-Instance
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          PrivateIpAddress: 10.0.0.10
          DeviceIndex: 0
          SubnetId: !Ref MyPrivateSN
          GroupSet:
            - !Ref SSMSG

  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName